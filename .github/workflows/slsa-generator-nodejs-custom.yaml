name: SLSA Generator Custom NodeJS

on:
  workflow_dispatch:
  push:

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65 # v4
      - name: Build steps
        run: |
          echo "Building the project"
          npm pack
      - name: Auto-Detect - Package details
        id: package-details
        run: |
          PACKAGE_PATH=$(ls -1 *.tgz | head -n 1) # To be change with the action as input
          PACKAGE_TGZ=$(basename $PACKAGE_PATH)
          PACKAGE_NAME=$(jq -r '.name' package.json)
          PACKAGE_VERSION=$(jq -r '.version' package.json)
          PACKAGE_INTEGRITY=$(shasum -a 512 $PACKAGE_PATH | awk '{print $1}')
          echo "PACKAGE_TGZ=${PACKAGE_TGZ}" >> $GITHUB_OUTPUT
          echo "PACKAGE_NAME=${PACKAGE_NAME}" >> $GITHUB_OUTPUT
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> $GITHUB_OUTPUT
          echo "PACKAGE_INTEGRITY=sha512-${PACKAGE_INTEGRITY}" >> $GITHUB_OUTPUT
      - name: Print all outputs of packges details
        run: |
          echo "PACKAGE_TGZ=${{ steps.package-details.outputs.PACKAGE_TGZ }}"
          echo "PACKAGE_NAME=${{ steps.package-details.outputs.PACKAGE_NAME }}"
          echo "PACKAGE_VERSION=${{ steps.package-details.outputs.PACKAGE_VERSION }}"
          echo "PACKAGE_INTEGRITY=${{ steps.package-details.outputs.PACKAGE_INTEGRITY }}"
      - name: Generate the predicate (Generate a token)
        id: generate
        uses: slsa-framework/slsa-github-generator/actions/delegator/setup-generic@v2.0.0
        with:
          slsa-workflow-recipient: "delegator_lowperms-generic_slsa3.yml"
          slsa-rekor-log-public: true #To be changed when in action package
          slsa-runner-label: "ubuntu-latest"
          slsa-build-action-path: "./test"
          slsa-version: "v0.2"
          slsa-workflow-inputs: ${{ toJson(inputs) }}
      - name: Generate the predicate (Verify token)
        uses: slsa-framework/slsa-github-generator/.github/actions/verify-token@v2.0.0
        with:
          slsa-workflow-recipient: "delegator_lowperms-generic_slsa3.yml"
          slsa-unverified-token: ${{ steps.generate.outputs.slsa-token }}
          output-predicate: predicate.json
          builder-interface-type: "builder"
      - name: Generate the SLSA layout
        env:
          SLSA_OUTPUTS_ARTIFACTS_FILE: artifacts-layout.json
          PACKAGE_NAME: ${{ steps.package-details.outputs.PACKAGE_NAME }}
          PACKAGE_VERSION: ${{ steps.package-details.outputs.PACKAGE_VERSION }}
          PACKAGE_INTEGRITY: ${{ steps.package-details.outputs.PACKAGE_INTEGRITY }}
          PACKAGE_FILENAME: ${{ steps.package-details.outputs.PACKAGE_FILENAME }}
        run: |
          bash ./.github/workflows/slsa-github-generator-nodejs-layout.sh
      - name: Generate the attestation
        uses: slsa-framework/slsa-github-generator/.github/actions/generate-attestations@v2.0.0
        with:
          slsa-layout-file: artifacts-layout.json
          predicate-type: https://slsa.dev/provenance/v0.2
          predicate-file: predicate.json
          output-folder: attestations-unsigned
      - name: Sign the attestation
        uses: slsa-framework/slsa-github-generator/.github/actions/sign-attestations@v2.0.0
        with:
          payload-type: application/vnd.in-toto+json
          attestations: attestations-unsigned
          output-folder: attestations-signed          

      

    